@prefix fno: <https://w3id.org/function/ontology#> .
@prefix lib: <http://example.com/library#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .
@prefix dcterms: <http://purl.org/dc/terms/> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .

@prefix : <http://example.com/idlab/functions/string/> .
@prefix dyversify: <http://example.com/idlab/functions/dyversify/> .

###########################
### Dyversify functions ###
###########################

dyversify:generateIRI a fno:Function ;
  fno:name "generate IRI" ;
  rdfs:label "generate IRI" ;
  dcterms:description "Returns the IRI for an element (removes unwanted characters and corrects capitalization)" ;
  fno:expects ( dyversify:valueParam dyversify:valueParam2 ) ;
  fno:returns ( dyversify:stringOut ) ;
  lib:providedBy [
    lib:localLibrary "engine/DyversifyFunctions.java";
    lib:class "DyversifyFunctions";
    lib:method "generateIRI"
  ].

dyversify:valueParam a fno:Parameter ;
  fno:name "input value" ;
  rdfs:label "input value" ;
  fno:type xsd:string ;
  fno:predicate dyversify:str .

dyversify:valueParam2 a fno:Parameter ;
  fno:name "input value 2" ;
  rdfs:label "input value 2" ;
  fno:type xsd:string ;
  fno:predicate dyversify:prefix .

dyversify:stringOut a fno:Output ;
  fno:name "output string" ;
  rdfs:label "output string" ;
  fno:type xsd:string ;
  fno:predicate dyversify:stringOutput .
